--@name PlayerFinder3
--@shared

if CLIENT then
    local Players = {}
    local debugMode = false  -- Toggle for debugging player names

    if player() == owner() then
        enableHud(owner(), true)
    end
    
    function Find() 
        Players = find.allPlayers()
    end
    
    Find()
    
    timer.create("findTimer", 10, 0, function()
        Find()
    end)
    
    hook.add("PlayerDisconnected", "discon", Find)
    hook.add("PlayerSpawn", "firstspawn", Find)
    
    hook.add("drawhud", "draw", function()
        for _, Player in pairs(Players) do
            if not Player:isValid() then
                Find()
                break
            end
        
            if Player == owner() or Player == player() then
                continue
            end
            
            local highlightPlayers = {"STEAM_0:0:558828457", "{ICF} Bubster {ICF}", "STEAM_0:0:73251296", "STEAM_0:1:2260606", "STEAM_0:0:6030375q", "STEAM_0:1:88479766"}  -- Replace with your list of friend names
            local suspiciousPlayers = {"STEAM_0:1:233837923", "STEAM_0:1:153527461"}  -- Replace with SteamID32 values for suspicious players
            local shouldHighlightFriend = false
            local shouldHighlightSuspicious = false
            
            -- Check if the player is a friend
            for _, steamid in ipairs(highlightPlayers) do
                if Player:getSteamID() == steamid then
                    shouldHighlightFriend = true
                    break
                end
            end

            -- Check if the player is suspicious
            for _, steamid in ipairs(suspiciousPlayers) do
                if Player:getSteamID() == steamid then
                    shouldHighlightSuspicious = true
                    break
                end
            end
            
            -- Debug mode: Print player names to console
            if debugMode then
                print("Player Name: " .. Player:getName())
            end
            
            local mins, maxs = Player:obbMins(), Player:obbMaxs()
            local corners = {
                Player:localToWorld(mins),
                Player:localToWorld(Vector(mins.x, maxs.y, mins.z)),
                Player:localToWorld(Vector(maxs.x, maxs.y, mins.z)),
                Player:localToWorld(Vector(maxs.x, mins.y, mins.z)),
                Player:localToWorld(Vector(mins.x, mins.y, maxs.z)),
                Player:localToWorld(Vector(mins.x, maxs.y, maxs.z)),
                Player:localToWorld(Vector(maxs.x, maxs.y, maxs.z)),
                Player:localToWorld(Vector(maxs.x, mins.y, maxs.z)),
            }

            local screenCorners = {}
            for _, corner in ipairs(corners) do
                local screenPos = corner:toScreen()
                if screenPos.visible then
                    table.insert(screenCorners, screenPos)
                end
            end

            -- Draw 3D wireframe box with color logic
            local time = timer.curtime() * 5  -- Adjust speed by changing the multiplier
            local friendColor = Color(math.sin(time) * 127 + 128, math.sin(time + 2) * 127 + 128, math.sin(time + 4) * 127 + 128)
            local suspiciousColor = Color(255 * math.abs(math.sin(time)), 127 + 128 * math.abs(math.cos(time)), 0)  -- Flashes between orange, red, yellow
            local boxColor = shouldHighlightFriend and friendColor or (shouldHighlightSuspicious and suspiciousColor or team.getColor(Player:getTeam()))
            render.setColor(boxColor)

            local function drawLine(c1, c2)
                render.drawLine(c1.x, c1.y, c2.x, c2.y)
            end

            -- Draw edges of the bounding box
            if #screenCorners >= 8 then
                -- Draw the front face
                drawLine(screenCorners[1], screenCorners[2])
                drawLine(screenCorners[2], screenCorners[3])
                drawLine(screenCorners[3], screenCorners[4])
                drawLine(screenCorners[4], screenCorners[1])
                drawLine(screenCorners[5], screenCorners[6])
                drawLine(screenCorners[6], screenCorners[7])
                drawLine(screenCorners[7], screenCorners[8])
                drawLine(screenCorners[8], screenCorners[5])
                drawLine(screenCorners[1], screenCorners[5])
                drawLine(screenCorners[2], screenCorners[6])
                drawLine(screenCorners[3], screenCorners[7])
                drawLine(screenCorners[4], screenCorners[8])
            end

    -- Health and Armor HUD Drawing
        local Dis = player():obbCenterW():getDistance(Player:getPos())
        local Cords = (Player:getPos() + Vector(0, 0, Player:obbSize().z)):toScreen()
        local Cords2 = Player:getPos():toScreen()
        
        -- Define a larger base offset for more space
        local baseOffset = 6000  -- Increased offset for better spacing

        -- Health
        local health = Player:getHealth()
        local healthColor = Color(math.clamp(255 - 255 * health / 100, 0, 255), math.clamp(255 * health / 100, 0, 255), 0)
        render.setColor(healthColor)
        render.drawRect(Cords2["x"] - 10000 / Dis, Cords2["y"] + baseOffset / Dis, math.clamp(20000 * health, 1, 20000) / Dis, 5000 / Dis)
        render.setColor(Color(255, 255, 255))  -- White text color
        render.drawText(Cords2["x"] - 10000 / Dis, Cords2["y"] + (baseOffset + 500) / Dis, "Health: " .. health, 1, 2)  -- Larger, white text

        -- Armor
        local armor = Player:getArmor()
        local armorColor = Color(200, 200, 200)  -- White color for armor bar
        render.setColor(armorColor)
        render.drawRect(Cords2["x"] - 10000 / Dis, Cords2["y"] + (baseOffset + 1500) / Dis, math.clamp(20000 * armor, 1, 20000) / Dis, 5000 / Dis)
        render.setColor(Color(255, 255, 255))  -- White text color
        render.drawText(Cords2["x"] - 10000 / Dis, Cords2["y"] + (baseOffset + 2000) / Dis, "Armor: " .. armor, 1, 2)  -- Larger, white text

        -- Player name
        local textColor = shouldHighlightFriend and friendColor or (shouldHighlightSuspicious and suspiciousColor or team.getColor(Player:getTeam()))
        render.setColor(textColor)
        render.drawText(Cords["x"], Cords["y"] - 1000 / Dis^0.5, Player:getName(), 1)
        end
    end)
    
    -- Toggle debug mode on key press
    hook.add("inputPressed", "toggleDebug", function(key)
        if key == KEY_F1 then  -- Change KEY_F1 to whatever key you want
            debugMode = not debugMode
            print("Debug mode " .. (debugMode and "enabled" or "disabled"))
        end
    end)
end
